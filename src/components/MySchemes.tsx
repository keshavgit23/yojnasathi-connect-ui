import { useState } from "react";
import SchemeCard from "./SchemeCard";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Search, Filter } from "lucide-react";
import { useLanguage } from "@/contexts/LanguageContext";

interface Scheme {
  id: string;
  title: string;
  description: string;
  category: string;
  beneficiaries: string;
  amount: string;
  deadline: string;
  status: "Live" | "Over";
  eligibility: string;
  howToApply?: string[];
}

interface MySchemesProps {
  onSchemeClick: (scheme: Scheme) => void;
}

const MySchemes = ({ onSchemeClick }: MySchemesProps) => {
  const { t } = useLanguage();
  const [searchQuery, setSearchQuery] = useState("");
  const [activeFilter, setActiveFilter] = useState("‡§∏‡§∞‡•ç‡§µ");

  const filterOptions = ["‡§∏‡§∞‡•ç‡§µ", "‡§∂‡•á‡§§‡§ï‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ", "‡§Æ‡§π‡§ø‡§≤‡§æ ‡§Ø‡•ã‡§ú‡§®‡§æ", "‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§∞‡•ç‡§•‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ", "‡§ò‡§∞‡§ï‡•Å‡§≤ ‡§Ø‡•ã‡§ú‡§®‡§æ"];
  
  const schemes: Scheme[] = [
    {
      id: "1",
      title: "‡§Æ‡§æ‡§ù‡•Ä ‡§≤‡§æ‡§°‡§ï‡•Ä ‡§¨‡§π‡•Ä‡§£ ‡§Ø‡•ã‡§ú‡§®‡§æ (Mazhi Ladki Bahin Yojana)",
      description: "‡§Æ‡§π‡§ø‡§≤‡§æ ‡§∏‡§∂‡§ï‡•ç‡§§‡§ø‡§ï‡§∞‡§£ ‡§Ü‡§£‡§ø ‡§∏‡§π‡§æ‡§Ø‡•ç‡§Ø ‡§Ø‡•ã‡§ú‡§®‡§æ - Financial assistance scheme for women empowerment",
      category: "‡§Æ‡§π‡§ø‡§≤‡§æ ‡§Ø‡•ã‡§ú‡§®‡§æ",
      beneficiaries: "21-65 ‡§µ‡§Ø‡•ã‡§ó‡§ü‡§æ‡§§‡•Ä‡§≤ ‡§Æ‡§π‡§ø‡§≤‡§æ",
      amount: "‚Çπ1,500 ‡§™‡•ç‡§∞‡§§‡§ø ‡§Æ‡§π‡§ø‡§®‡§æ",
      deadline: "31 ‡§°‡§ø‡§∏‡•á‡§Ç‡§¨‡§∞, 2024",
      status: "Live",
      eligibility: "‡§Æ‡§π‡§æ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§æ‡§§‡•Ä‡§≤ 21-65 ‡§µ‡§Ø‡•ã‡§ó‡§ü‡§æ‡§§‡•Ä‡§≤ ‡§Æ‡§π‡§ø‡§≤‡§æ ‡§ú‡•ç‡§Ø‡§æ‡§Ç‡§ö‡•á ‡§ï‡•å‡§ü‡•Å‡§Ç‡§¨‡§ø‡§ï ‡§µ‡§æ‡§∞‡•ç‡§∑‡§ø‡§ï ‡§â‡§§‡•ç‡§™‡§®‡•ç‡§® ‚Çπ2.5 ‡§≤‡§æ‡§ñ‡§æ‡§Ç‡§™‡•á‡§ï‡•ç‡§∑‡§æ ‡§ï‡§Æ‡•Ä ‡§Ü‡§π‡•á",
      howToApply: ["‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§° ‡§§‡§Ø‡§æ‡§∞ ‡§†‡•á‡§µ‡§æ", "‡§â‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞", "‡§¨‡§Å‡§ï ‡§ñ‡§æ‡§§‡•á ‡§§‡§™‡§∂‡•Ä‡§≤", "‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§Ö‡§∞‡•ç‡§ú ‡§≠‡§∞‡§æ"]
    },
    {
      id: "2",
      title: "‡§™‡§Ç‡§§‡§™‡•ç‡§∞‡§ß‡§æ‡§® ‡§ï‡§ø‡§∏‡§æ‡§® ‡§Ø‡•ã‡§ú‡§®‡§æ (PM Kisan Yojana)",
      description: "‡§∂‡•á‡§§‡§ï‡§±‡•ç‡§Ø‡§æ‡§Ç‡§®‡§æ ‡§•‡•á‡§ü ‡§Ü‡§∞‡•ç‡§•‡§ø‡§ï ‡§∏‡§π‡§æ‡§Ø‡•ç‡§Ø - Direct income support to farmers",
      category: "‡§∂‡•á‡§§‡§ï‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ",
      beneficiaries: "‡§≤‡§π‡§æ‡§® ‡§µ ‡§∏‡•Ä‡§Æ‡§æ‡§Ç‡§§ ‡§∂‡•á‡§§‡§ï‡§∞‡•Ä",
      amount: "‚Çπ6,000 ‡§™‡•ç‡§∞‡§§‡§ø ‡§µ‡§∞‡•ç‡§∑",
      deadline: "‡§∏‡§§‡§§ ‡§ö‡§æ‡§≤‡•Ç",
      status: "Live",
      eligibility: "2 ‡§π‡•á‡§ï‡•ç‡§ü‡§∞‡§™‡§∞‡•ç‡§Ø‡§Ç‡§§ ‡§∂‡•á‡§§‡•Ä ‡§ú‡§Æ‡•Ä‡§® ‡§Ö‡§∏‡§≤‡•á‡§≤‡•á ‡§≤‡§π‡§æ‡§® ‡§µ ‡§∏‡•Ä‡§Æ‡§æ‡§Ç‡§§ ‡§∂‡•á‡§§‡§ï‡§∞‡•Ä",
      howToApply: ["‡§ú‡§Æ‡•Ä‡§® ‡§ï‡§æ‡§ó‡§¶‡§™‡§§‡•ç‡§∞‡•á", "‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§°", "‡§¨‡§Å‡§ï ‡§ñ‡§æ‡§§‡•á ‡§§‡§™‡§∂‡•Ä‡§≤", "PM-KISAN ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤‡§µ‡§∞ ‡§®‡•ã‡§Ç‡§¶‡§£‡•Ä"]
    },
    {
      id: "3",
      title: "‡§Æ‡§ú‡•Ç‡§∞ ‡§ï‡§æ‡§Æ‡§ó‡§æ‡§∞ ‡§≠‡§æ‡§Ç‡§°‡§ï‡§Æ ‡§Ø‡•ã‡§ú‡§®‡§æ (Majur Kamgar Bhandkam Yojana)",
      description: "‡§¨‡§æ‡§Ç‡§ß‡§ï‡§æ‡§Æ ‡§ï‡§æ‡§Æ‡§ó‡§æ‡§∞‡§æ‡§Ç‡§∏‡§æ‡§†‡•Ä ‡§∏‡§æ‡§Æ‡§æ‡§ú‡§ø‡§ï ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§Ø‡•ã‡§ú‡§®‡§æ - Social security for construction workers",
      category: "‡§ï‡§æ‡§Æ‡§ó‡§æ‡§∞ ‡§Ø‡•ã‡§ú‡§®‡§æ",
      beneficiaries: "‡§¨‡§æ‡§Ç‡§ß‡§ï‡§æ‡§Æ ‡§ï‡§æ‡§Æ‡§ó‡§æ‡§∞",
      amount: "‡§µ‡§ø‡§µ‡§ø‡§ß ‡§´‡§æ‡§Ø‡§¶‡•á",
      deadline: "31 ‡§Æ‡§æ‡§∞‡•ç‡§ö, 2025",
      status: "Live",
      eligibility: "‡§ï‡§æ‡§Æ‡§ó‡§æ‡§∞ ‡§Æ‡§Ç‡§°‡§≥‡§æ‡§§ ‡§®‡•ã‡§Ç‡§¶‡§£‡•Ä ‡§ï‡•á‡§≤‡•á‡§≤‡•á ‡§¨‡§æ‡§Ç‡§ß‡§ï‡§æ‡§Æ ‡§ï‡§æ‡§Æ‡§ó‡§æ‡§∞",
      howToApply: ["‡§ï‡§æ‡§Æ‡§ó‡§æ‡§∞ ‡§Æ‡§Ç‡§°‡§≥ ‡§®‡•ã‡§Ç‡§¶‡§£‡•Ä", "‡§ï‡§æ‡§Æ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞", "‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§°", "‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§Ö‡§∞‡•ç‡§ú"]
    },
    {
      id: "4",
      title: "‡§™‡§Ç‡§§‡§™‡•ç‡§∞‡§ß‡§æ‡§® ‡§Ü‡§µ‡§æ‡§∏ ‡§Ø‡•ã‡§ú‡§®‡§æ (Pradhan Mantri Awas Yojana)",
      description: "‡§∏‡§∞‡•ç‡§µ‡§æ‡§Ç‡§∏‡§æ‡§†‡•Ä ‡§ò‡§∞ ‡§Æ‡§ø‡§∂‡§® - ‡§™‡§∞‡§µ‡§°‡§£‡§æ‡§∞‡•Ä ‡§ò‡§∞‡•á - Housing for All mission",
      category: "‡§ò‡§∞‡§ï‡•Å‡§≤ ‡§Ø‡•ã‡§ú‡§®‡§æ",
      beneficiaries: "EWS, LIG, MIG ‡§ï‡•Å‡§ü‡•Å‡§Ç‡§¨‡•á",
      amount: "‚Çπ2.67 ‡§≤‡§æ‡§ñ ‡§™‡§∞‡•ç‡§Ø‡§Ç‡§§ ‡§Ö‡§®‡•Å‡§¶‡§æ‡§®",
      deadline: "31 ‡§°‡§ø‡§∏‡•á‡§Ç‡§¨‡§∞, 2024",
      status: "Over",
      eligibility: "‡§ú‡•ç‡§Ø‡§æ‡§Ç‡§ö‡•ç‡§Ø‡§æ‡§ï‡§°‡•á ‡§™‡§ï‡•ç‡§ï‡•á ‡§ò‡§∞ ‡§®‡§æ‡§π‡•Ä ‡§Ö‡§∂‡•Ä ‡§ï‡•Å‡§ü‡•Å‡§Ç‡§¨‡•á, ‡§â‡§§‡•ç‡§™‡§®‡•ç‡§®‡§æ‡§ö‡•á ‡§®‡§ø‡§ï‡§∑",
      howToApply: ["‡§â‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞", "‡§ú‡§æ‡§§ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞", "‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§°", "PMAY ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤‡§µ‡§∞ ‡§Ö‡§∞‡•ç‡§ú"]
    }
  ];

  const filteredSchemes = schemes.filter(scheme => {
    const matchesSearch = scheme.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         scheme.description.toLowerCase().includes(searchQuery.toLowerCase());
    const matchesFilter = activeFilter === "‡§∏‡§∞‡•ç‡§µ" || scheme.category === activeFilter;
    return matchesSearch && matchesFilter;
  });

  return (
    <div>
      <h2 className="text-3xl font-bold text-foreground mb-8">‡§∂‡§æ‡§∏‡§® ‡§Ü‡§™‡§≤‡•ç‡§Ø‡§æ ‡§¶‡§æ‡§∞‡•Ä</h2>
      
      {/* Search Bar */}
      <div className="mb-6">
        <div className="relative max-w-md">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4" />
          <Input
            type="text"
            placeholder="‡§Ø‡•ã‡§ú‡§®‡§æ ‡§∂‡•ã‡§ß‡§æ..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="pl-10"
          />
        </div>
      </div>

      {/* Filter Options */}
      <div className="flex flex-wrap gap-2 mb-8">
        <Filter className="w-4 h-4 mt-2 text-muted-foreground" />
        {filterOptions.map((filter) => (
          <Badge
            key={filter}
            variant={activeFilter === filter ? "default" : "secondary"}
            className={`cursor-pointer px-4 py-2 ${
              activeFilter === filter 
                ? "bg-primary text-primary-foreground" 
                : "bg-secondary hover:bg-secondary/80"
            }`}
            onClick={() => setActiveFilter(filter)}
          >
            {filter}
          </Badge>
        ))}
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filteredSchemes.map((scheme) => (
          <div key={scheme.id} className="relative">
            <div className="bg-card rounded-lg border border-border hover:border-primary/30 hover:shadow-md transition-all duration-200 p-6">
              {/* Scheme Header */}
              <div className="flex items-start justify-between mb-4">
                <Badge 
                  variant="secondary" 
                  className="bg-primary/10 text-primary border-primary/20"
                >
                  {scheme.category}
                </Badge>
                <Badge 
                  variant={scheme.status === "Live" ? "default" : "destructive"}
                  className="text-xs"
                >
                  {scheme.status === "Live" ? "‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø" : "‡§∏‡§Ç‡§™‡§≤‡•á‡§≤‡•Ä"}
                </Badge>
              </div>

              {/* Scheme Title */}
              <h3 className="text-xl font-bold text-foreground mb-3 leading-tight">
                {scheme.title}
              </h3>

              {/* Description */}
              <p className="text-muted-foreground mb-4 line-clamp-2">
                {scheme.description}
              </p>

              {/* Benefit Amount */}
              <div className="mb-4">
                <div className="flex items-center text-primary font-bold text-lg">
                  <span className="mr-1">üí∞</span>
                  {scheme.amount}
                </div>
                <p className="text-sm text-muted-foreground mt-1">‡§≤‡§æ‡§≠ ‡§∞‡§ï‡•ç‡§ï‡§Æ</p>
              </div>

              {/* Eligibility */}
              <div className="mb-4">
                <h4 className="font-semibold text-foreground mb-2">‡§™‡§æ‡§§‡•ç‡§∞‡§§‡§æ:</h4>
                <p className="text-sm text-muted-foreground line-clamp-2">
                  {scheme.eligibility}
                </p>
              </div>

              {/* How to Apply */}
              {scheme.howToApply && (
                <div className="mb-4">
                  <h4 className="font-semibold text-foreground mb-2">‡§Ö‡§∞‡•ç‡§ú ‡§ï‡§∏‡§æ ‡§ï‡§∞‡§æ:</h4>
                  <ul className="text-sm text-muted-foreground space-y-1">
                    {scheme.howToApply.slice(0, 2).map((step, index) => (
                      <li key={index} className="flex items-center">
                        <span className="w-1.5 h-1.5 bg-primary rounded-full mr-2"></span>
                        {step}
                      </li>
                    ))}
                  </ul>
                </div>
              )}

              {/* View More Button */}
              <Button 
                onClick={() => onSchemeClick(scheme)}
                className="w-full bg-primary hover:bg-primary/90 text-primary-foreground"
              >
                ‡§Ö‡§ß‡§ø‡§ï ‡§§‡§™‡§∂‡•Ä‡§≤ ‡§™‡§π‡§æ
              </Button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default MySchemes;